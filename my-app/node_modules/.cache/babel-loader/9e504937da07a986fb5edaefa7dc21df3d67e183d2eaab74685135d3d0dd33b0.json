{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Documents\\\\reactproject\\\\my-app\\\\src\\\\components\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// This is a functional component named TextForm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  // Function to handle the button click event for converting text to uppercase\n  const handleUpClick = () => {\n    console.log(\"Uppercase button clicked\");\n    // Convert the current text to uppercase\n    let newText = text.toUpperCase();\n    // Update the state with the new uppercase text\n    setText(newText);\n  };\n  const handleLoClick = () => {\n    console.log(\"Lowecase button clicked\");\n    // Convert the current text to lowercase\n    let newText = text.toUpperCase();\n    // Update the state with the new lowecase text\n    setText(newText);\n  };\n\n  // Function to handle the change event when the user types in the textarea\n  const handleOnChange = event => {\n    console.log(\"Text changed\");\n    // Update the state with the new text value from the textarea\n    setText(event.target.value);\n  };\n\n  // useState hook to manage the state of the text. \n  // 'text' is the current state, and 'setText' is the function to update the state.\n  // The initial state is set to 'enter your text'.\n  const [text, setText] = useState('enter your text');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [props.heading, \" - \", text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        id: \"myBox\",\n        rows: \"8\",\n        value: text,\n        onChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary m-3\",\n      onClick: handleUpClick,\n      children: \"Convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary m-3\",\n      onClick: handleLoClick,\n      children: \"Convert to Lowercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(TextForm, \"Z7q7S/dcXG9HUyo4S4G8yOhbosM=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","props","_s","handleUpClick","console","log","newText","text","toUpperCase","setText","handleLoClick","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/Documents/reactproject/my-app/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// This is a functional component named TextForm\r\nexport default function TextForm(props) {\r\n\r\n    // Function to handle the button click event for converting text to uppercase\r\n    const handleUpClick = () => {\r\n        console.log(\"Uppercase button clicked\");\r\n        // Convert the current text to uppercase\r\n        let newText = text.toUpperCase();\r\n        // Update the state with the new uppercase text\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        console.log(\"Lowecase button clicked\");\r\n        // Convert the current text to lowercase\r\n        let newText = text.toUpperCase();\r\n        // Update the state with the new lowecase text\r\n        setText(newText);\r\n\r\n    \r\n    }\r\n\r\n\r\n    // Function to handle the change event when the user types in the textarea\r\n    const handleOnChange = (event) => {\r\n        console.log(\"Text changed\");\r\n        // Update the state with the new text value from the textarea\r\n        setText(event.target.value);\r\n    }\r\n\r\n    // useState hook to manage the state of the text. \r\n    // 'text' is the current state, and 'setText' is the function to update the state.\r\n    // The initial state is set to 'enter your text'.\r\n    const [text, setText] = useState('enter your text');\r\n\r\n    return (\r\n        <div>\r\n            {/* Display the heading passed as a prop and the current text */}\r\n            <div className=\"mb-3\">\r\n                <h1>{props.heading} - {text}</h1>\r\n                {/* Textarea for user input. The value is controlled by the state. */}\r\n                <textarea \r\n                    className=\"form-control\" \r\n                    id=\"myBox\" \r\n                    rows=\"8\" \r\n                    value={text} \r\n                    onChange={handleOnChange}>\r\n                </textarea>\r\n            </div>\r\n            {/* Button to convert the text to uppercase */}\r\n            <button className=\"btn btn-primary m-3\" onClick={handleUpClick}>\r\n                Convert to Uppercase\r\n            </button>\r\n            <button className=\"btn btn-primary m-3\" onClick={handleLoClick}>\r\n                Convert to Lowercase\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEpC;EACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC;IACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC;IAChC;IACAC,OAAO,CAACH,OAAO,CAAC;EACpB,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IACxBN,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC;IACA,IAAIC,OAAO,GAAGC,IAAI,CAACC,WAAW,CAAC,CAAC;IAChC;IACAC,OAAO,CAACH,OAAO,CAAC;EAGpB,CAAC;;EAGD;EACA,MAAMK,cAAc,GAAIC,KAAK,IAAK;IAC9BR,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B;IACAI,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;;EAED;EACA;EACA;EACA,MAAM,CAACP,IAAI,EAAEE,OAAO,CAAC,GAAGZ,QAAQ,CAAC,iBAAiB,CAAC;EAEnD,oBACIE,OAAA;IAAAgB,QAAA,gBAEIhB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBhB,OAAA;QAAAgB,QAAA,GAAKd,KAAK,CAACgB,OAAO,EAAC,KAAG,EAACV,IAAI;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEjCtB,OAAA;QACIiB,SAAS,EAAC,cAAc;QACxBM,EAAE,EAAC,OAAO;QACVC,IAAI,EAAC,GAAG;QACRT,KAAK,EAAEP,IAAK;QACZiB,QAAQ,EAAEb;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENtB,OAAA;MAAQiB,SAAS,EAAC,qBAAqB;MAACS,OAAO,EAAEtB,aAAc;MAAAY,QAAA,EAAC;IAEhE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MAAQiB,SAAS,EAAC,qBAAqB;MAACS,OAAO,EAAEf,aAAc;MAAAK,QAAA,EAAC;IAEhE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEd;AAACnB,EAAA,CA1DuBF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}